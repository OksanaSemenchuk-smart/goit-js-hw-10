{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nstartButton.disabled = true;\n\nlet userSelectedDate = null;\nlet countInterval = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (selectedDate <= currentDate) {\n      iziToast.warning({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(datePicker, options);\n\nfunction addZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  daysSpan.textContent = days;\n  hoursSpan.textContent = addZero(hours);\n  minutesSpan.textContent = addZero(minutes);\n  secondsSpan.textContent = addZero(seconds);\n}\n\nstartButton.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startButton.disabled = true;\n  datePicker.disabled = true;\n\n  countInterval = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(countInterval);\n      updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      datePicker.disabled = false;\n      return;\n    }\n    const timeLeft = convertMs(diff);\n    updateTimer(timeLeft);\n  }, 1000);\n});\n"],"names":["datePicker","startButton","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","countInterval","options","selectedDates","selectedDate","iziToast","flatpickr","addZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimer","diff","timeLeft"],"mappings":"+IAMA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DJ,EAAY,SAAW,GAEvB,IAAIK,EAAmB,KACnBC,EAAgB,KAEpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GADgB,IAAI,MAEtBC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDV,EAAY,SAAW,KAEvBK,EAAmBI,EACnBT,EAAY,SAAW,GAE1B,CACH,EAEAW,EAAUZ,EAAYQ,CAAO,EAE7B,SAASK,EAAQC,EAAO,CACtB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAY,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDlB,EAAS,YAAce,EACvBd,EAAU,YAAcU,EAAQK,CAAK,EACrCd,EAAY,YAAcS,EAAQM,CAAO,EACzCd,EAAY,YAAcQ,EAAQO,CAAO,CAC3C,CAEAnB,EAAY,iBAAiB,QAAS,IAAM,CACrCK,IAELL,EAAY,SAAW,GACvBD,EAAW,SAAW,GAEtBO,EAAgB,YAAY,IAAM,CAEhC,MAAMe,EAAOhB,EADD,IAAI,KAGhB,GAAIgB,GAAQ,EAAG,CACb,cAAcf,CAAa,EAC3Bc,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACzDrB,EAAW,SAAW,GACtB,MACD,CACD,MAAMuB,EAAWR,EAAUO,CAAI,EAC/BD,EAAYE,CAAQ,CACrB,EAAE,GAAI,EACT,CAAC"}